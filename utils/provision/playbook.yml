---
- name: Do things and stuff
  hosts: all
  become: true
  become_user: root
  vars:
    database_username: tarallo
    database_password: thisisnottheproductionpassword

    document_root: /var/www/html
    document_root_mounted: "{{ document_root }}/server"
    mariadb_mirror: 'mariadb.mirror.nucleus.be/yum'
    mariadb_bind_address: '0.0.0.0'
    mariadb_root_password: root
    mariadb_databases:
      - name: tarallo
      - name: tarallo_test
    mariadb_users:
      - name: "{{ database_username }}"
        password: "{{ database_password }}"
        priv: "`tarallo%`.*:ALL"
        host: "%"
    mariadb_custom_cnf:
      server:
        bind-address: 0.0.0.0
      mysqld:
        general-log:
        general-log-file: queries.log
        log-output: file
    php_webserver_daemon: "nginx"
    php_enablerepo: "remi-php72"
    php_packages:
      - php-cli
      - php-common
      - php-fpm
      - php-intl
      - php-json
      - php-mbstring
      - php-mysqlnd
      - php-opcache
      - php-pdo
      - php-dom
      - php-pecl-xdebug
    php_disable_functions:
      - exec
      - passthru
      - shell_exec
      - system
      - proc_open
      - popen
      - parse_ini_file
      - show_source
    php_enable_php_fpm: true
    php_enable_apc: false
    php_max_execution_time: "-1"
    php_date_timezone: "Europe/Rome"

    nginx_yum_repo_enabled: false
    nginx_remove_default_vhost: true
    nginx_sendfile: "off"
    nginx_vhosts:
    # sendfile is broken in VirtualBox
    - listen: "80 default_server"
      server_name: "_"
      index: "index.php"
      # root: "{{ document_root_mounted }}"
      template: "{{ nginx_vhost_template }}"
      filename: "tarallo-server.conf"
      state: "present"
      extra_parameters: |
        location /static/ {
          # static is in the request already
          root {{ document_root_mounted }}/src/SSRv1;
        }

        location / {
          include fastcgi_params;
          root {{ document_root_mounted }}/public;
          try_files $uri /index.php =404;
          fastcgi_read_timeout 3600s;

          fastcgi_param PATH_INFO $uri;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_pass 127.0.0.1:9000;
        }
    - listen: "81 default_server"
      server_name: "_"
      root: "{{ document_root }}/admin"
      template: "{{ nginx_vhost_template }}"
      filename: "tarallo-admin.conf"
      state: "present"
      extra_parameters: |
        location / {
          autoindex on;
          try_files $uri $uri/ =404;
        }

        location ~ \.php$ {
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_pass 127.0.0.1:9000;
        }

  roles:
    - role: bertvv.mariadb
    - role: goozbach.EPEL
    - role: geerlingguy.repo-remi
    - role: geerlingguy.php
    - role: geerlingguy.nginx

  handlers:
  - name: stop php-fpm
    service:
      name: php-fpm
      state: stopped
  - name: restart php-fpm
    service:
      name: php-fpm
      state: restarted

  pre_tasks:
  - name: Uninstall old PHP versions (if updating VM)
    yum:
      state: absent
      name:
        - php70u-common
        - php70u-fpm
        - php70u-json
        - php70u-mysqlnd
        - php70u-opcache
        - php70u-pdo
        - php70u-pecl-xdebug
        - php70u-mbstring
        - php70u-dom
        - php70u-mcrypt
        - php70u-intl
        - php72u-cli
        - php72u-common
        - php72u-fpm
        - php72u-json
        - php72u-mysqlnd
        - php72u-opcache
        - php72u-pdo
        - php72u-pecl-xdebug
        - php72u-mbstring
        - php72u-dom
        - php72u-intl
    notify:
      - stop php-fpm

  tasks:
  - name: Create a directory for no reason
    file: path=/home/vagrant/.phpstorm_helpers state=directory mode=0777

  - name: Enable and start PHP-FPM
    service:
      name: php-fpm
      enabled: yes
      state: started

  - name: Install PHP developement dependencies
    yum:
      state: installed
      name:
        - unzip

  - name: Enable XDebug
    template:
      src: 15-xdebug.ini.j2
      dest: "/etc/php.d/15-xdebug.ini"
      owner: root
      group: root
    notify:
      - restart php-fpm

  - name: Enable assertions (developement only)
    lineinfile:
      dest: /etc/php.ini
      regexp: '^zend\.assertions\s*='
      line: "zend.assertions = 1"
    notify:
    - restart php-fpm

  - name: Set max execution time
    lineinfile:
      dest: /etc/php.ini
      regexp: '^max_execution_time\s*='
      line: "max_execution_time = 0"
    notify:
      - restart php-fpm

  - name: Install Composer
    script: composer.sh
    args:
      creates: /usr/local/bin/composer

  - name: Install dependencies via Composer
    become: false
    composer:
      command: install
      optimize_autoloader: no
      no_dev: no
      working_dir: "{{ document_root_mounted }}"

  - name: Create Adminer directory
    file: path="{{ document_root }}/admin" state=directory mode=0775

  - name: Add a phpinfo for good measure
    template:
      src: phpinfo.php.j2
      dest: "{{ document_root }}/admin/phpinfo.php"

  - name: Download Adminer
    get_url:
      url: https://github.com/vrana/adminer/releases/download/v4.7.7/adminer-4.7.7-mysql-en.php
      dest: "{{ document_root }}/admin/adminer.php"
      mode: 0444

  - name: REALLY remove the broken (!?) default example nginx conf
    file: path="/etc/nginx/conf.d/example.com.conf" state=absent

  - name: Disable (set to permissive, actually) SELinux BECAUSE VIRTUALBOX, THAT'S WHY
    selinux: state=permissive policy=targeted

  - name: Drop databases (because importing tables is not really idempotent)
    mysql_db:
      name: "{{ item }}"
      login_user: root
      login_password: "{{ mariadb_root_password }}"
      state: absent
    with_items:
      - tarallo
      - tarallo_test

  - name: Create databases
    mysql_db:
      name: "{{ item }}"
      encoding: utf8mb4
      collation: utf8mb4_unicode_ci
      login_user: root
      login_password: "{{ mariadb_root_password }}"
      state: present
    with_items:
      - tarallo
      - tarallo_test

  - name: Import tables
    mysql_db:
      name: "{{ item }}"
      state: import
      login_user: root
      login_password: "{{ mariadb_root_password }}"
      target: "{{ document_root_mounted }}/database.sql"
    with_items:
      - tarallo
      - tarallo_test

  - name: Import default data
    mysql_db:
      name: "{{ item }}"
      state: import
      login_user: root
      login_password: "{{ mariadb_root_password }}"
      target: "{{ document_root_mounted }}/database-data.sql"
    with_items:
      - tarallo
      - tarallo_test

  - name: Import procedures
    mysql_db:
      name: "{{ item }}"
      state: import
      login_user: root
      login_password: "{{ mariadb_root_password }}"
      target: "{{ document_root_mounted }}/database-procedures.sql"
    with_items:
      - tarallo
      - tarallo_test

  - name: Replace my.cnf since it's the only way to enable event scheduler
    template:
      src: my.cnf.j2
      dest: /etc/my.cnf
      owner: root
      group: root
      mode: 0644

  - name: Create configuration file
    template:
      src: config.php.j2
      dest: "{{ document_root_mounted }}/config/config.php"
      # This fails since it's a Virtualbox/SMB/whatever share and permissions and owners aren't supported, apparently
      # owner: vagrant
      # group: vagrant
