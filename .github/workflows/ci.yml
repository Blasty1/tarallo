name: CI
on:
  push:
  pull_request:
  schedule:
    - cron: '27 10 1 * *'

jobs:
  run-test:
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:10.4
        env:
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      matrix:
        php: ['7.3', '8.0', 'latest']

    steps:
      - uses: actions/checkout@v2

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        uses: php-actions/composer@v6
        with:
          # If you use the PHPUnit action, uncomment this and comment php_extensions
          # args: --ignore-platform-reqs
          php_extensions: json mysqlnd pdo
          php_version: "${{ matrix.php }}"

      - name: Create config.php
        run: cp config/config-ci.php config/config.php

      # sudo apt-get install mariadb-client
      - name: Import database
        run: |
          echo "CREATE DATABASE tarallo;" | sudo mysql –-user=root --password=password --database=tarallo --host=127.0.0.1 --protocol=tcp --port=3306 < sql/database.sql
          sudo mysql –-user=root --password=password --database=tarallo --host=localhost --protocol=tcp --port=127.0.0.1 tarallo < sql/database.sql
          sudo mysql –-user=root --password=password --database=tarallo --host=localhost --protocol=tcp --port=127.0.0.1 tarallo < sql/database-data.sql
          sudo mysql –-user=root --password=password --database=tarallo --host=localhost --protocol=tcp --port=127.0.0.1 tarallo < sql/database-procedures.sql

#      - name: Run msgfmt
#        run: |
#          sudo apt-get install gettext
#          msgfmt resources/locale/en-US/LC_MESSAGES/messages.po --output-file=resources/locale/en-US/LC_MESSAGES/messages.mo

#      - name: PHPCS linting
#        run: vendor/bin/phpcs --report=summary src public templates

      - name: PHPUnit Tests
        run: vendor/bin/phpunit --configuration tests/phpunit.xml --coverage-text
